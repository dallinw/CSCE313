int offset_i = i - num_rows/2;
0800057c:   ldw r3,-32768(gp)
08000580:   srli r2,r3,31
08000584:   add r2,r2,r3
08000588:   srai r2,r2,1
0800058c:   mov r3,r2
08000590:   ldw r2,-36(fp)
08000594:   sub r2,r2,r3
08000598:   stw r2,-56(fp)
152       				int offset_j = j - num_cols/2;
0800059c:   ldw r3,-32764(gp)
080005a0:   srli r2,r3,31
080005a4:   add r2,r2,r3
080005a8:   srai r2,r2,1
080005ac:   mov r3,r2
080005b0:   ldw r2,-40(fp)
080005b4:   sub r2,r2,r3
080005b8:   stw r2,-60(fp)
154       				int rowf = 0;
080005bc:   stw zero,-64(fp)
155       				int colf = 0;
080005c0:   stw zero,-68(fp)
189       				row = offset_i*cosine-offset_j*sine + num_rows/2.0f;
080005c4:   ldw r4,-56(fp)
080005c8:   call 0x80031f4 <__floatsisf>
080005cc:   mov r3,r2
080005d0:   ldw r2,-48(fp)
080005d4:   custom 252,r16,r3,r2
080005d8:   ldw r4,-60(fp)
080005dc:   call 0x80031f4 <__floatsisf>
080005e0:   mov r3,r2
080005e4:   ldw r2,-44(fp)
080005e8:   custom 252,r2,r3,r2
080005ec:   custom 254,r16,r16,r2
080005f0:   ldw r4,-32768(gp)
080005f4:   call 0x80031f4 <__floatsisf>
080005f8:   mov r4,r2
080005fc:   movhi r5,16384
08000600:   call 0x8002e28 <__divsf3>
08000604:   custom 253,r2,r16,r2
08000608:   stw r2,-25164(gp)
190       				col = offset_i*sine+offset_j*cosine + num_cols/2.0f;
0800060c:   ldw r4,-56(fp)
08000610:   call 0x80031f4 <__floatsisf>
08000614:   mov r3,r2
08000618:   ldw r2,-44(fp)
0800061c:   custom 252,r16,r3,r2
08000620:   ldw r4,-60(fp)
08000624:   call 0x80031f4 <__floatsisf>
08000628:   mov r3,r2
0800062c:   ldw r2,-48(fp)
08000630:   custom 252,r2,r3,r2
08000634:   custom 253,r16,r16,r2
08000638:   ldw r4,-32764(gp)
0800063c:   call 0x80031f4 <__floatsisf>
08000640:   mov r4,r2
08000644:   movhi r5,16384
08000648:   call 0x8002e28 <__divsf3>
0800064c:   custom 253,r2,r16,r2
08000650:   stw r2,-25176(gp)
194       				if(col>num_cols || col<0 || row>num_rows || row<0) continue;
08000654:   ldw r4,-32764(gp)
08000658:   call 0x80031f4 <__floatsisf>
0800065c:   ldw r3,-25176(gp)
08000660:   mov r4,r2
08000664:   mov r5,r3
08000668:   call 0x8003104 <__ltsf2>
0800066c:   cmplt r2,r2,zero
08000670:   bne r2,zero,0x8000a60 <main+2144>
08000674:   ldw r2,-25176(gp)
08000678:   mov r4,r2
0800067c:   mov r5,zero
08000680:   call 0x8003104 <__ltsf2>
08000684:   cmplt r2,r2,zero
08000688:   bne r2,zero,0x8000a60 <main+2144>
0800068c:   ldw r4,-32768(gp)
08000690:   call 0x80031f4 <__floatsisf>
08000694:   ldw r3,-25164(gp)
08000698:   mov r4,r2
0800069c:   mov r5,r3
080006a0:   call 0x8003104 <__ltsf2>
080006a4:   cmplt r2,r2,zero
080006a8:   bne r2,zero,0x8000a60 <main+2144>
080006ac:   ldw r2,-25164(gp)
080006b0:   mov r4,r2
080006b4:   mov r5,zero
080006b8:   call 0x8003104 <__ltsf2>
080006bc:   cmplt r2,r2,zero
080006c0:   bne r2,zero,0x8000a60 <main+2144>
196       				rowf = (int)floorf(row);
080006c4:   ldw r2,-25164(gp)
080006c8:   mov r4,r2
080006cc:   call 0x8001204 <floorf>
080006d0:   mov r4,r2
080006d4:   call 0x800328c <__fixsfsi>
080006d8:   stw r2,-64(fp)
197       				colf = (int)floorf(col);
080006dc:   ldw r2,-25176(gp)
080006e0:   mov r4,r2
080006e4:   call 0x8001204 <floorf>
080006e8:   mov r4,r2
080006ec:   call 0x800328c <__fixsfsi>
080006f0:   stw r2,-68(fp)
202       				float rfrac = row-rowf;
080006f4:   ldw r16,-25164(gp)
080006f8:   ldw r4,-64(fp)
080006fc:   call 0x80031f4 <__floatsisf>
08000700:   custom 254,r2,r16,r2
08000704:   stw r2,-72(fp)
203       				float cfrac = col-colf;
08000708:   ldw r16,-25176(gp)
0800070c:   ldw r4,-68(fp)
08000710:   call 0x80031f4 <__floatsisf>
08000714:   custom 254,r2,r16,r2
08000718:   stw r2,-76(fp)
208       				float weight1 = (1.0-rfrac)*(1.0-cfrac);
0800071c:   movhi r3,16256
08000720:   ldw r2,-72(fp)
08000724:   custom 254,r4,r3,r2
08000728:   movhi r3,16256
0800072c:   ldw r2,-76(fp)
08000730:   custom 254,r2,r3,r2
08000734:   custom 252,r2,r4,r2
08000738:   stw r2,-80(fp)
209       				float weight2 = rfrac*(1.0-cfrac);
0800073c:   movhi r3,16256
08000740:   ldw r2,-76(fp)
08000744:   custom 254,r3,r3,r2
08000748:   ldw r2,-72(fp)
0800074c:   custom 252,r2,r3,r2
08000750:   stw r2,-84(fp)
210       				float weight3 = rfrac*cfrac;
08000754:   ldw r3,-72(fp)
08000758:   ldw r2,-76(fp)
0800075c:   custom 252,r2,r3,r2
08000760:   stw r2,-88(fp)
211       				float weight4 = (1.0-rfrac)*cfrac;
08000764:   movhi r3,16256
08000768:   ldw r2,-72(fp)
0800076c:   custom 254,r3,r3,r2
08000770:   ldw r2,-76(fp)
08000774:   custom 252,r2,r3,r2
08000778:   stw r2,-92(fp)
215       				int pixel1 = rowf*320*3 + colf*3;
0800077c:   ldw r2,-64(fp)
08000780:   muli r4,r2,960
08000784:   ldw r3,-68(fp)
08000788:   mov r2,r3
0800078c:   add r2,r2,r2
08000790:   add r2,r2,r3
08000794:   add r2,r4,r2
08000798:   stw r2,-96(fp)
216       				int pixel2 = (rowf + 1)*320*3 + colf*3;
0800079c:   ldw r2,-64(fp)
080007a0:   muli r4,r2,960
080007a4:   ldw r3,-68(fp)
080007a8:   mov r2,r3
080007ac:   add r2,r2,r2
080007b0:   add r2,r2,r3
080007b4:   add r2,r4,r2
080007b8:   addi r2,r2,960
080007bc:   stw r2,-100(fp)
217       				int pixel3 = (rowf + 1)*320*3 + (colf + 1)*3;
080007c0:   ldw r2,-64(fp)
080007c4:   muli r4,r2,960
080007c8:   ldw r3,-68(fp)
080007cc:   mov r2,r3
080007d0:   add r2,r2,r2
080007d4:   add r2,r2,r3
080007d8:   add r2,r4,r2
080007dc:   addi r2,r2,963
080007e0:   stw r2,-104(fp)
218       				int pixel4 = rowf*320*3 + (colf + 1)*3;
080007e4:   ldw r3,-68(fp)
080007e8:   mov r2,r3
080007ec:   add r2,r2,r2
080007f0:   add r3,r2,r3
080007f4:   ldw r2,-64(fp)
080007f8:   muli r2,r2,960
080007fc:   add r2,r3,r2
08000800:   addi r2,r2,3
08000804:   stw r2,-108(fp)
225       						weight4*my_image[pixel4]);
08000808:   ldw r2,-96(fp)
0800080c:   mov r3,r2
08000810:   ldw r2,-20(fp)
08000814:   add r2,r3,r2
08000818:   ldbu r2,0(r2)
0800081c:   andi r4,r2,255
08000820:   call 0x80031f4 <__floatsisf>
08000824:   mov r3,r2
08000828:   ldw r2,-80(fp)
0800082c:   custom 252,r16,r3,r2
08000830:   ldw r2,-100(fp)
08000834:   mov r3,r2
08000838:   ldw r2,-20(fp)
0800083c:   add r2,r3,r2
08000840:   ldbu r2,0(r2)
08000844:   andi r4,r2,255
08000848:   call 0x80031f4 <__floatsisf>
0800084c:   mov r3,r2
08000850:   ldw r2,-84(fp)
08000854:   custom 252,r2,r3,r2
08000858:   custom 253,r16,r16,r2
0800085c:   ldw r2,-104(fp)
08000860:   mov r3,r2
08000864:   ldw r2,-20(fp)
08000868:   add r2,r3,r2
0800086c:   ldbu r2,0(r2)
08000870:   andi r4,r2,255
08000874:   call 0x80031f4 <__floatsisf>
08000878:   mov r3,r2
0800087c:   ldw r2,-88(fp)
08000880:   custom 252,r2,r3,r2
08000884:   custom 253,r16,r16,r2
08000888:   ldw r2,-108(fp)
0800088c:   mov r3,r2
08000890:   ldw r2,-20(fp)
08000894:   add r2,r3,r2
08000898:   ldbu r2,0(r2)
0800089c:   andi r4,r2,255
080008a0:   call 0x80031f4 <__floatsisf>
080008a4:   mov r3,r2
080008a8:   ldw r2,-92(fp)
080008ac:   custom 252,r2,r3,r2
080008b0:   custom 253,r2,r16,r2
080008b4:   mov r4,r2
080008b8:   call 0x800328c <__fixsfsi>
080008bc:   stw r2,-112(fp)
230       						weight4*my_image[pixel4+1]);
080008c0:   ldw r3,-96(fp)
080008c4:   ldw r2,-20(fp)
080008c8:   add r2,r3,r2
080008cc:   addi r2,r2,1
080008d0:   ldbu r2,0(r2)
080008d4:   andi r4,r2,255
080008d8:   call 0x80031f4 <__floatsisf>
080008dc:   mov r3,r2
080008e0:   ldw r2,-80(fp)
080008e4:   custom 252,r16,r3,r2
080008e8:   ldw r3,-100(fp)
080008ec:   ldw r2,-20(fp)
080008f0:   add r2,r3,r2
080008f4:   addi r2,r2,1
080008f8:   ldbu r2,0(r2)
080008fc:   andi r4,r2,255
08000900:   call 0x80031f4 <__floatsisf>
08000904:   mov r3,r2
08000908:   ldw r2,-84(fp)
0800090c:   custom 252,r2,r3,r2
08000910:   custom 253,r16,r16,r2
08000914:   ldw r3,-104(fp)
08000918:   ldw r2,-20(fp)
0800091c:   add r2,r3,r2
08000920:   addi r2,r2,1
08000924:   ldbu r2,0(r2)
08000928:   andi r4,r2,255
0800092c:   call 0x80031f4 <__floatsisf>
08000930:   mov r3,r2
08000934:   ldw r2,-88(fp)
08000938:   custom 252,r2,r3,r2
0800093c:   custom 253,r16,r16,r2
08000940:   ldw r3,-108(fp)
08000944:   ldw r2,-20(fp)
08000948:   add r2,r3,r2
0800094c:   addi r2,r2,1
08000950:   ldbu r2,0(r2)
08000954:   andi r4,r2,255
08000958:   call 0x80031f4 <__floatsisf>
0800095c:   mov r3,r2
08000960:   ldw r2,-92(fp)
08000964:   custom 252,r2,r3,r2
08000968:   custom 253,r2,r16,r2
0800096c:   mov r4,r2
08000970:   call 0x800328c <__fixsfsi>
08000974:   stw r2,-116(fp)
235       						weight4*my_image[pixel4+2]);
08000978:   ldw r3,-96(fp)
0800097c:   ldw r2,-20(fp)
08000980:   add r2,r3,r2
08000984:   addi r2,r2,2
08000988:   ldbu r2,0(r2)
0800098c:   andi r4,r2,255
08000990:   call 0x80031f4 <__floatsisf>
08000994:   mov r3,r2
08000998:   ldw r2,-80(fp)
0800099c:   custom 252,r16,r3,r2
080009a0:   ldw r3,-100(fp)
080009a4:   ldw r2,-20(fp)
080009a8:   add r2,r3,r2
080009ac:   addi r2,r2,2
080009b0:   ldbu r2,0(r2)
080009b4:   andi r4,r2,255
080009b8:   call 0x80031f4 <__floatsisf>
080009bc:   mov r3,r2
080009c0:   ldw r2,-84(fp)
080009c4:   custom 252,r2,r3,r2
080009c8:   custom 253,r16,r16,r2
080009cc:   ldw r3,-104(fp)
080009d0:   ldw r2,-20(fp)
080009d4:   add r2,r3,r2
080009d8:   addi r2,r2,2
080009dc:   ldbu r2,0(r2)
080009e0:   andi r4,r2,255
080009e4:   call 0x80031f4 <__floatsisf>
080009e8:   mov r3,r2
080009ec:   ldw r2,-88(fp)
080009f0:   custom 252,r2,r3,r2
080009f4:   custom 253,r16,r16,r2
080009f8:   ldw r3,-108(fp)
080009fc:   ldw r2,-20(fp)
08000a00:   add r2,r3,r2
08000a04:   addi r2,r2,2
08000a08:   ldbu r2,0(r2)
08000a0c:   andi r4,r2,255
08000a10:   call 0x80031f4 <__floatsisf>
08000a14:   mov r3,r2
08000a18:   ldw r2,-92(fp)
08000a1c:   custom 252,r2,r3,r2
08000a20:   custom 253,r2,r16,r2
08000a24:   mov r4,r2
08000a28:   call 0x800328c <__fixsfsi>
08000a2c:   stw r2,-120(fp)
